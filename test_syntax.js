        console.log('üöÄ FLAP JavaScript –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è...');
        
        // Global state
        let currentUser = null;
        let currentRating = 0;
        let currentMatchScore = { green: 2, blue: 1 };
        let coins = 250;
        let videoRatings = {}; // Store current rating values
        
        // Test function availability on page load
        document.addEventListener('DOMContentLoaded', function() {
            console.log('üìÑ DOM –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
            console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü—ñ–π:');
            console.log('- handleQuickLogin:', typeof handleQuickLogin);
            console.log('- handleQuickRegister:', typeof handleQuickRegister);
            console.log('- switchAuthMode:', typeof switchAuthMode);
            
            console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤:');
            console.log('- authScreen:', !!document.getElementById('authScreen'));
            console.log('- mainScreen:', !!document.getElementById('mainScreen'));
            
            // Add test button for debugging
            const testBtn = document.createElement('button');
            testBtn.textContent = 'üß™ –¢–ï–°–¢ –í–•–û–î–£';
            testBtn.style.position = 'fixed';
            testBtn.style.top = '10px';
            testBtn.style.right = '10px';
            testBtn.style.zIndex = '9999';
            testBtn.style.padding = '10px';
            testBtn.style.background = 'red';
            testBtn.style.color = 'white';
            testBtn.style.border = 'none';
            testBtn.style.borderRadius = '5px';
            testBtn.onclick = function() {
                console.log('üß™ –¢–µ—Å—Ç–æ–≤–∏–π –≤—Ö—ñ–¥');
                if (typeof handleQuickLogin === 'function') {
                    handleQuickLogin();
                } else {
                    alert('‚ùå handleQuickLogin –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!');
                }
            };
            document.body.appendChild(testBtn);
        });

        // Team names for auto-balance
        const teamNames = [
            ["‚ö° –ë–ª–∏—Å–∫–∞–≤–∫–∏", "üî• –í–æ–≥–Ω—è–Ω—ñ"],
            ["ü¶Ö –û—Ä–ª–∏", "üê∫ –í–æ–≤–∫–∏"], 
            ["‚≠ê –ó—ñ—Ä–∫–∏", "üíé –î—ñ–∞–º–∞–Ω—Ç–∏"],
            ["üöÄ –†–∞–∫–µ—Ç–∏", "‚öîÔ∏è –í–æ—ó–Ω–∏"],
            ["üèÜ –ß–µ–º–ø—ñ–æ–Ω–∏", "üëë –ö–æ—Ä–æ–ª—ñ"],
            ["üåü –õ–µ–≥–µ–Ω–¥–∏", "üî± –¢–∏—Ç–∞–Ω–∏"]
        ];

        // Video categories data
        const videoCategories = {
            'all': {
                videos: [
                                { id: 'video1', title: '–ö—Ä–∞—â–∏–π —Ñ—ñ–Ω—Ç —Ç–∏–∂–Ω—è', author: '–ê–Ω–¥—Ä—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ', city: '–ö–∏—ó–≤', position: '–ü—ñ–≤–∑–∞—Ö–∏—Å–Ω–∏–∫', rating: 4.1, category: 'tricks' },
            { id: 'video2', title: '–¢–æ—á–Ω—ñ—Å—Ç—å —É–¥–∞—Ä—ñ–≤', author: '–ü–µ—Ç—Ä–æ –ú–µ–ª—å–Ω–∏–∫', city: '–õ—å–≤—ñ–≤', position: '–ù–∞–ø–∞–¥–Ω–∏–∫', rating: 4.2, category: 'accuracy' },
            { id: 'video3', title: '–®–≤–∏–¥–∫—ñ—Å–Ω–∏–π –¥—Ä–∏–±–ª—ñ–Ω–≥', author: '–î–º–∏—Ç—Ä–æ –ö–æ–≤–∞–ª–µ–Ω–∫–æ', city: '–û–¥–µ—Å–∞', position: '–í–æ—Ä–æ—Ç–∞—Ä', rating: 3.8, category: 'speed' },
            { id: 'video4', title: '–ù–µ–π–º–æ–≤—ñ—Ä–Ω–∏–π —Å–µ–π–≤', author: '–û–ª–µ–∫—Å—ñ–π –®–µ–≤—á–µ–Ω–∫–æ', city: '–•–∞—Ä–∫—ñ–≤', position: '–í–æ—Ä–æ—Ç–∞—Ä', rating: 4.5, category: 'top' },
            { id: 'video5', title: '–¢–µ—Ö–Ω—ñ—á–Ω–∏–π —É–¥–∞—Ä', author: '–ú–∞–∫—Å–∏–º –ó—ñ–Ω—á–µ–Ω–∫–æ', city: '–î–Ω—ñ–ø—Ä–æ', position: '–ü—ñ–≤–∑–∞—Ö–∏—Å–Ω–∏–∫', rating: 3.7, category: 'accuracy' }
                ]
            }
        };

        // Update vote value display
        function updateVoteValue(videoId, value) {
            const ratingValue = parseFloat(value);
            document.getElementById('vote_' + videoId).textContent = ratingValue.toFixed(2);
            videoRatings[videoId] = ratingValue;
        }

        // Video voting with button and disabled slider
        function voteForVideo(videoId, event) {
            event.stopPropagation();
            
            const ratingValue = videoRatings[videoId] || 0;
            
            if (ratingValue === 0) {
                showToast('‚ùå –û–±–µ—Ä—ñ—Ç—å –æ—Ü—ñ–Ω–∫—É –Ω–∞ –ø–æ–≤–∑—É–Ω–∫—É!', 'error');
                return;
            }
            
            // Disable slider and button after voting
            const slider = document.querySelector(`input[onchange*="${videoId}"]`);
            const button = event.target;
            if (slider) slider.disabled = true;
            button.disabled = true;
            button.textContent = '–ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–Ω–æ';
            button.style.background = '#666';
            
            showToast(`‚≠ê –ì–æ–ª–æ—Å ${ratingValue.toFixed(2)} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!`, 'success');
            
            // Show rating change animation
            setTimeout(() => {
                showRatingChange('+0.1', '#4caf50');
            }, 1000);
        }

        // Show rating change
        function showRatingChange(change, color) {
            const toast = document.createElement('div');
            toast.style.cssText = `
                position: fixed;
                top: 60px;
                right: 20px;
                background: ${color};
                color: white;
                padding: 8px 15px;
                border-radius: 20px;
                font-weight: 700;
                font-size: 14px;
                z-index: 2000;
                transform: translateX(300px);
                transition: all 0.5s ease;
            `;
            toast.textContent = `–†–µ–π—Ç–∏–Ω–≥ ${change}`;
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.style.transform = 'translateX(0)';
            }, 100);
            
            setTimeout(() => {
                toast.style.transform = 'translateX(300px)';
                setTimeout(() => document.body.removeChild(toast), 500);
            }, 2000);
        }

        // Video filters with actual changes
        function filterVideos(type) {
            document.querySelectorAll('.video-filter').forEach(btn => {
                btn.classList.remove('active');
                btn.style.background = 'rgba(255,255,255,0.1)';
                btn.style.borderColor = 'rgba(255,255,255,0.3)';
                btn.style.color = 'white';
            });
            
            event.target.classList.add('active');
            event.target.style.background = 'rgba(76, 175, 80, 0.2)';
            event.target.style.borderColor = '#4caf50';
            event.target.style.color = '#2e7d32';
            
            // Simulate video content change
            const videoContainer = document.querySelector('#videos');
            const currentVideos = videoContainer.querySelectorAll('.challenge-video-item');
            
            currentVideos.forEach((video, index) => {
                video.style.opacity = '0.3';
                video.style.transform = 'scale(0.95)';
                
                setTimeout(() => {
                    video.style.opacity = '1';
                    video.style.transform = 'scale(1)';
                    
                    // Change video titles based on filter
                    const titleElement = video.querySelector('.challenge-video-title');
                    const authorElement = video.querySelector('strong');
                    
                    switch(type) {
                        case 'tricks':
                            titleElement.textContent = index === 0 ? '–ù–µ–π–º–æ–≤—ñ—Ä–Ω–∏–π —Ñ—ñ–Ω—Ç' : '–¢–µ—Ö–Ω—ñ—á–Ω–∏–π —Ç—Ä—é–∫';
                            authorElement.textContent = index === 0 ? '–í—ñ—Ç–∞–ª—ñ–π –§—ñ–Ω—Ç–µ—Ä' : '–û–ª–µ–≥ –¢–µ—Ö–Ω—ñ–∫';
                            break;
                        case 'accuracy':
                            titleElement.textContent = index === 0 ? '–°—É–ø–µ—Ä —Ç–æ—á–Ω—ñ—Å—Ç—å' : '–í–ª—É—á–Ω–∏–π —É–¥–∞—Ä';
                            authorElement.textContent = index === 0 ? '–ê–Ω–¥—Ä—ñ–π –°–Ω–∞–π–ø–µ—Ä' : '–ú–∞–∫—Å–∏–º –í–ª—É—á–Ω–∏–∫';
                            break;
                        case 'speed':
                            titleElement.textContent = index === 0 ? '–®–≤–∏–¥–∫—ñ—Å—Ç—å –±–ª–∏—Å–∫–∞–≤–∫–∏' : '–†–µ–∫–æ—Ä–¥–Ω–∏–π —á–∞—Å';
                            authorElement.textContent = index === 0 ? '–û–ª–µ–∫—Å–∞–Ω–¥—Ä –®–≤–∏–¥–∫–∏–π' : '–ü–µ—Ç—Ä–æ –†–µ–∫–æ—Ä–¥';
                            break;
                        case 'city':
                            titleElement.textContent = index === 0 ? '–í—ñ–¥–µ–æ –∑ –ö–∏—î–≤–∞' : '–õ—å–≤—ñ–≤—Å—å–∫–∏–π –º–∞–π—Å—Ç–µ—Ä';
                            authorElement.textContent = index === 0 ? '–ö–∏—ó–≤—Å—å–∫–∏–π –ì—Ä–∞–≤–µ—Ü—å' : '–õ—å–≤—ñ–≤—Å—å–∫–∏–π –ü—Ä–æ';
                            break;
                        case 'rating':
                            titleElement.textContent = index === 0 ? '–¢–æ–ø —Ä–µ–π—Ç–∏–Ω–≥ 4.9' : '–í–∏—Å–æ–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥ 4.7';
                            authorElement.textContent = index === 0 ? '–ó—ñ—Ä–∫–∞ ‚≠ê4.9' : '–ú–∞–π—Å—Ç–µ—Ä ‚≠ê4.7';
                            break;
                        case 'popular':
                            titleElement.textContent = index === 0 ? 'üî• –í—ñ—Ä—É—Å–Ω–µ –≤—ñ–¥–µ–æ' : 'üìà –¢—Ä–µ–Ω–¥–æ–≤–µ –≤—ñ–¥–µ–æ';
                            authorElement.textContent = index === 0 ? '–í—ñ—Ä—É—Å–Ω–∏–π –ë–ª–æ–≥–µ—Ä' : '–ü–æ–ø—É–ª—è—Ä–Ω–∏–π –ì—Ä–∞–≤–µ—Ü—å';
                            break;
                        default:
                            titleElement.textContent = index === 0 ? '–ö—Ä–∞—â–∏–π —Ñ—ñ–Ω—Ç —Ç–∏–∂–Ω—è' : '–¢–æ—á–Ω—ñ—Å—Ç—å —É–¥–∞—Ä—ñ–≤';
                            authorElement.textContent = index === 0 ? '–ê–Ω–¥—Ä—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ' : '–ü–µ—Ç—Ä–æ –ú–µ–ª—å–Ω–∏–∫';
                    }
                }, index * 200);
            });
            
            const filters = {
                'all': 'üåü –ü–æ–∫–∞–∑–∞–Ω–æ –≤—Å—ñ –≤—ñ–¥–µ–æ',
                'tricks': 'üéØ –ü–æ–∫–∞–∑–∞–Ω–æ —Ç—ñ–ª—å–∫–∏ —Ñ—ñ–Ω—Ç–∏',
                'accuracy': '‚öΩ –ü–æ–∫–∞–∑–∞–Ω–æ –≤—ñ–¥–µ–æ —Ç–æ—á–Ω–æ—Å—Ç—ñ',
                'speed': 'üèÉ –ü–æ–∫–∞–∑–∞–Ω–æ —à–≤–∏–¥–∫—ñ—Å–Ω—ñ –≤—ñ–¥–µ–æ',
                'city': 'üèôÔ∏è –§—ñ–ª—å—Ç—Ä –ø–æ –º—ñ—Å—Ç–∞—Ö',
                'rating': '‚≠ê –ü–æ–∫–∞–∑–∞–Ω–æ –≤—ñ–¥–µ–æ –∑ —Ä–µ–π—Ç–∏–Ω–≥–æ–º 4.5+',
                'popular': 'üî• –ü–æ–∫–∞–∑–∞–Ω–æ –ø–æ–ø—É–ª—è—Ä–Ω—ñ –≤—ñ–¥–µ–æ'
            };
            
            showToast(filters[type], 'success');
        }

        // Better search with city and rating filters
        function searchVideos(query) {
            if (query.length > 2) {
                const isCity = ['–∫–∏—ó–≤', '–ª—å–≤—ñ–≤', '–æ–¥–µ—Å–∞', '—Ö–∞—Ä–∫—ñ–≤', '–¥–Ω—ñ–ø—Ä–æ'].some(city => 
                    query.toLowerCase().includes(city)
                );
                const isRating = query.includes('4.') || query.includes('5.') || query.includes('—Ä–µ–π—Ç–∏–Ω–≥');
                
                if (isCity) {
                    showToast(`üèôÔ∏è –§—ñ–ª—å—Ç—Ä –ø–æ –º—ñ—Å—Ç—É: "${query}"`, 'success');
                } else if (isRating) {
                    showToast(`‚≠ê –§—ñ–ª—å—Ç—Ä –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É: "${query}"`, 'success');
                } else {
                    showToast(`üîç –ü–æ—à—É–∫: "${query}"`, 'success');
                }
            }
        }

        // Enhanced player profiles with different avatars
        function showPlayerProfile(playerId) {
            const players = {
                'andriy_kovalenka': {
                    avatar: 'üéØ',
                    name: '–ê–Ω–¥—Ä—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ',
                    position: '–ü—ñ–≤–∑–∞—Ö–∏—Å–Ω–∏–∫ ‚Ä¢ –ö–∏—ó–≤ ‚Ä¢ 24 —Ä–æ–∫–∏',
                    rating: '4.8',
                    matches: '89',
                    winRate: '91%',
                    goals: '45',
                    contact: {
                        phone: '+380501234567',
                        telegram: '@andriy_football',
                        instagram: '@andriy.football.kiev'
                    }
                },
                'petro_melnyk': {
                    avatar: '‚öΩ',
                    name: '–ü–µ—Ç—Ä–æ –ú–µ–ª—å–Ω–∏–∫',
                    position: '–ù–∞–ø–∞–¥–Ω–∏–∫ ‚Ä¢ –õ—å–≤—ñ–≤ ‚Ä¢ 23 —Ä–æ–∫–∏',
                    rating: '4.9',
                    matches: '67',
                    winRate: '88%',
                    goals: '89',
                    contact: {
                        phone: '+380671234567',
                        telegram: '@petro_striker',
                        instagram: '@petro.goals.lviv'
                    }
                },
                'oleg_semenko': {
                    avatar: '‚ö°',
                    name: '–û–ª–µ–≥ –°–µ–º–µ–Ω–æ–≤',
                    position: '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª ‚Ä¢ –û–¥–µ—Å–∞ ‚Ä¢ 26 —Ä–æ–∫—ñ–≤',
                    rating: '4.6',
                    matches: '54',
                    winRate: '85%',
                    goals: '32',
                    contact: {
                        phone: '+380481234567',
                        telegram: '@oleg_fast',
                        instagram: '@oleg.speed.odesa'
                    }
                },
                'maksym_petrenka': {
                    avatar: 'üèÉ',
                    name: '–ú–∞–∫—Å–∏–º –ü–µ—Ç—Ä–µ–Ω–∫–æ',
                    position: '–ù–∞–ø–∞–¥–Ω–∏–∫ ‚Ä¢ –•–∞—Ä–∫—ñ–≤ ‚Ä¢ 22 —Ä–æ–∫–∏',
                    rating: '4.7',
                    matches: '76',
                    winRate: '89%',
                    goals: '95',
                    contact: {
                        phone: '+380571234567',
                        telegram: '@maksym_goal',
                        instagram: '@maksym.striker.kharkiv'
                    }
                },
                'viktor_shevchenko': {
                    avatar: 'üõ°Ô∏è',
                    name: '–í—ñ–∫—Ç–æ—Ä –®–µ–≤—á–µ–Ω–∫–æ',
                    position: '–ó–∞—Ö–∏—Å–Ω–∏–∫ ‚Ä¢ –î–Ω—ñ–ø—Ä–æ ‚Ä¢ 28 —Ä–æ–∫—ñ–≤',
                    rating: '4.5',
                    matches: '102',
                    winRate: '87%',
                    goals: '12',
                    contact: {
                        phone: '+380561234567',
                        telegram: '@viktor_def',
                        instagram: '@viktor.defense.dnipro'
                    }
                },
                'dmitro_kovalenko': {
                    avatar: 'ü•Ö',
                    name: '–î–º–∏—Ç—Ä–æ –ö–æ–≤–∞–ª–µ–Ω–∫–æ',
                    position: '–í–æ—Ä–æ—Ç–∞—Ä ‚Ä¢ –û–¥–µ—Å–∞ ‚Ä¢ 27 —Ä–æ–∫—ñ–≤',
                    rating: '4.7',
                    matches: '56',
                    winRate: '85%',
                    goals: '2',
                    contact: {
                        phone: '+380931234567',
                        telegram: '@dmitro_keeper',
                        instagram: '@dmitro.saves.odesa'
                    }
                },
                'oleksandr_m': {
                    avatar: 'üöÄ',
                    name: '–û–ª–µ–∫—Å–∞–Ω–¥—Ä –ú–µ–ª—å–Ω–∏–∫',
                    position: '–ù–∞–ø–∞–¥–Ω–∏–∫ ‚Ä¢ –ö–∏—ó–≤ ‚Ä¢ 25 —Ä–æ–∫—ñ–≤',
                    rating: '4.9',
                    matches: '78',
                    winRate: '92%',
                    goals: '67',
                    contact: {
                        phone: '+380631234567',
                        telegram: '@oleksandr_speed',
                        instagram: '@oleksandr.rocket.kyiv'
                    }
                }
            };

            const player = players[playerId] || players['andriy_k'];
            
            document.getElementById('profileAvatar').textContent = player.avatar;
            document.getElementById('profileName').textContent = player.name;
            document.getElementById('profilePosition').textContent = player.position;
            document.getElementById('profileRating').textContent = player.rating;
            document.getElementById('profileMatches').textContent = player.matches;
            document.getElementById('profileWinRate').textContent = player.winRate;
            document.getElementById('profileGoals').textContent = player.goals;
            
            // Update contact info
            document.querySelector('[onclick="copyContact(\'+380501234567\')"]').setAttribute('onclick', `copyContact('${player.contact.phone}')`);
            document.querySelector('[onclick="copyContact(\'+380501234567\')"]').previousElementSibling.textContent = player.contact.phone;
            
            document.querySelector('[onclick="copyContact(\'@maksym_football\')"]').setAttribute('onclick', `copyContact('${player.contact.telegram}')`);
            document.querySelector('[onclick="copyContact(\'@maksym_football\')"]').previousElementSibling.textContent = player.contact.telegram;
            
            document.querySelector('[onclick="copyContact(\'@maksym.football.kyiv\')"]').setAttribute('onclick', `copyContact('${player.contact.instagram}')`);
            document.querySelector('[onclick="copyContact(\'@maksym.football.kyiv\')"]').previousElementSibling.textContent = player.contact.instagram;
            
            document.getElementById('playerProfileModal').classList.add('show');
        }

        // Challenge creation functions
        function showCreateChallenge() {
            document.getElementById('createChallengeModal').classList.add('show');
        }

        function calculatePrizePool(contribution) {
            const estimatedParticipants = 10; // –ü—Ä–∏–±–ª–∏–∑–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤
            const prizePool = contribution * estimatedParticipants;
            document.getElementById('prizePoolDisplay').textContent = prizePool + '‚Ç¥';
        }

        function closeCreateChallenge() {
            document.getElementById('createChallengeModal').classList.remove('show');
        }

        function toggleInvite(type) {
            const btn = event.target;
            if (btn.style.background === 'rgb(76, 175, 80)') {
                btn.style.background = '#f5f5f5';
                btn.style.color = '#333';
            } else {
                btn.style.background = '#4caf50';
                btn.style.color = 'white';
            }
        }

        function createChallenge(event) {
            event.preventDefault();
            closeCreateChallenge();
            showToast('üèÜ –ß–µ–ª–µ–Ω–¥–∂ —Å—Ç–≤–æ—Ä–µ–Ω–æ!', 'success');
            event.target.reset();
            // Reset invite buttons
            document.querySelectorAll('.invite-btn').forEach(btn => {
                btn.style.background = '#f5f5f5';
                btn.style.color = '#333';
            });
        }

        // Challenge participation
        function joinChallenge(challengeId) {
            document.getElementById('challengeParticipateModal').classList.add('show');
        }

        function closeChallengeParticipate() {
            document.getElementById('challengeParticipateModal').classList.remove('show');
        }

        function submitChallengeVideo(event) {
            event.preventDefault();
            closeChallengeParticipate();
            showToast('üìπ –í—ñ–¥–µ–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ! +20 –º–æ–Ω–µ—Ç', 'success');
            addCoins(20); // +20 –∑–∞ –ø—Ä–∏–π–Ω—è—Ç—Ç—è –≤–∏–∫–ª–∏–∫—É —Ç–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            event.target.reset();
        }



        // Enhanced end match with multiple player ratings
        function endMatch() {
            document.getElementById('scoreInstructions').innerHTML = 'üèÅ –ú–∞—Ç—á –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –¢–µ–ø–µ—Ä –æ—Ü—ñ–Ω—ñ—Ç—å –≤—Å—ñ—Ö –≥—Ä–∞–≤—Ü—ñ–≤ –∑ –≤–∞—à–æ—ó –∫–æ–º–∞–Ω–¥–∏';
            showToast('üèÅ –ú–∞—Ç—á –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –û—Ü—ñ–Ω—ñ—Ç—å –≥—Ä–∞–≤—Ü—ñ–≤ –∑—ñ —Å–≤–æ—î—ó –∫–æ–º–∞–Ω–¥–∏', 'success');
            setTimeout(() => {
                showRatingModal('oleksandr_m');
            }, 1500);
        }

        // Enhanced rating with change display
        function submitRating() {
            if (currentRating === 0) {
                showToast('‚≠ê –û–±–µ—Ä—ñ—Ç—å —Ä–µ–π—Ç–∏–Ω–≥!', 'error');
                return;
            }
            
            document.getElementById('ratingModal').classList.remove('show');
            showToast(`‚≠ê –†–µ–π—Ç–∏–Ω–≥ ${currentRating.toFixed(2)}/5 –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!`, 'success');
            
            // Show rating changes
            setTimeout(() => {
                if (currentRating >= 4.0) {
                    showRatingChange('+0.2', '#4caf50');
                } else if (currentRating >= 2.5) {
                    showRatingChange('+0.1', '#ff9800');
                } else {
                    showRatingChange('-0.1', '#f44336');
                }
            }, 1000);
            
            currentRating = 0;
            
            // Reset rating form
            document.getElementById('playerRatingValue').textContent = '0.0';
            document.getElementById('ratingStars').textContent = '‚òÜ‚òÜ‚òÜ‚òÜ‚òÜ';
            document.getElementById('ratingStars').style.color = '#ddd';
        }

        // Store and subscription functions
        function showStore() {
            console.log('showStore called');
            document.getElementById('storeModal').style.display = 'flex';
            const storeContent = `
                <div style="max-height: 70vh; overflow-y: auto;">
                    <h3 style="text-align: center; margin-bottom: 20px; color: #2e7d32;">üõí –ú–∞–≥–∞–∑–∏–Ω FLAP</h3>
                    
                    <!-- –ë—É—Å—Ç–µ—Ä–∏ -->
                    <div style="margin-bottom: 25px;">
                        <h4 style="color: #4caf50; margin-bottom: 15px; display: flex; align-items: center; gap: 8px;">
                            üöÄ –ë—É—Å—Ç–µ—Ä–∏
                        </h4>
                        <div style="display: grid; gap: 10px;">
                            <div style="background: #f8f9fa; padding: 12px; border-radius: 10px; display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <div style="font-weight: 600; font-size: 14px;">‚ö° –ü–æ–¥–≤—ñ–π–Ω–∏–π –¥–æ—Å–≤—ñ–¥</div>
                                    <div style="font-size: 12px; color: #666;">x2 –¥–æ—Å–≤—ñ–¥ –∑–∞ –º–∞—Ç—á—ñ (24 –≥–æ–¥–∏–Ω–∏)</div>
                                </div>
                                <button onclick="buyItem('double_xp', 50)" style="background: #4caf50; color: white; border: none; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">50 üí∞</button>
                            </div>
                            <div style="background: #f8f9fa; padding: 12px; border-radius: 10px; display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <div style="font-weight: 600; font-size: 14px;">üéØ –¢–æ—á–Ω—ñ—Å—Ç—å+</div>
                                    <div style="font-size: 12px; color: #666;">+0.2 –¥–æ —Ä–µ–π—Ç–∏–Ω–≥—É —Ç–æ—á–Ω–æ—Å—Ç—ñ (7 –¥–Ω—ñ–≤)</div>
                                </div>
                                <button onclick="buyItem('accuracy_boost', 100)" style="background: #4caf50; color: white; border: none; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">100 üí∞</button>
                            </div>
                            <div style="background: #f8f9fa; padding: 12px; border-radius: 10px; display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <div style="font-weight: 600; font-size: 14px;">üí™ –í–∏—Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å</div>
                                    <div style="font-size: 12px; color: #666;">–ú–µ–Ω—à–µ –≤—Ç–æ–º–∏ –≤ –º–∞—Ç—á–∞—Ö (3 –¥–Ω—ñ)</div>
                                </div>
                                <button onclick="buyItem('stamina_boost', 75)" style="background: #4caf50; color: white; border: none; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">75 üí∞</button>
                            </div>
                        </div>
                    </div>

                    <!-- –ë–µ–π–¥–∂—ñ -->
                    <div style="margin-bottom: 25px;">
                        <h4 style="color: #ff9800; margin-bottom: 15px; display: flex; align-items: center; gap: 8px;">
                            üèÖ –ë–µ–π–¥–∂—ñ
                        </h4>
                        <div style="display: grid; gap: 10px;">
                            <div style="background: #f8f9fa; padding: 12px; border-radius: 10px; display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <div style="font-weight: 600; font-size: 14px;">üëë VIP –ì—Ä–∞–≤–µ—Ü—å</div>
                                    <div style="font-size: 12px; color: #666;">–ó–æ–ª–æ—Ç–∏–π –∑–Ω–∞—á–æ–∫ –±—ñ–ª—è —ñ–º–µ–Ω—ñ</div>
                                </div>
                                <button onclick="buyItem('vip_badge', 200)" style="background: #ff9800; color: white; border: none; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">200 üí∞</button>
                            </div>
                            <div style="background: #f8f9fa; padding: 12px; border-radius: 10px; display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <div style="font-weight: 600; font-size: 14px;">‚öΩ –ö–æ—Ä–æ–ª—å –ì–æ–ª—ñ–≤</div>
                                    <div style="font-size: 12px; color: #666;">–î–ª—è –≥—Ä–∞–≤—Ü—ñ–≤ –∑ 100+ –≥–æ–ª–∞–º–∏</div>
                                </div>
                                <button onclick="buyItem('goal_king', 150)" style="background: #ff9800; color: white; border: none; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">150 üí∞</button>
                            </div>
                            <div style="background: #f8f9fa; padding: 12px; border-radius: 10px; display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <div style="font-weight: 600; font-size: 14px;">üõ°Ô∏è –°—Ç—ñ–Ω–∞</div>
                                    <div style="font-size: 12px; color: #666;">–î–ª—è –∑–∞—Ö–∏—Å–Ω–∏–∫—ñ–≤ –∑ 90%+ –ø–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω—å</div>
                                </div>
                                <button onclick="buyItem('wall_badge', 120)" style="background: #ff9800; color: white; border: none; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">120 üí∞</button>
                            </div>
                        </div>
                    </div>

                    <!-- –ï–º–æ—Ü—ñ—ó -->
                    <div style="margin-bottom: 20px;">
                        <h4 style="color: #9c27b0; margin-bottom: 15px; display: flex; align-items: center; gap: 8px;">
                            üòÑ –ï–º–æ—Ü—ñ—ó
                        </h4>
                        <div style="display: grid; gap: 10px;">
                            <div style="background: #f8f9fa; padding: 12px; border-radius: 10px; display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <div style="font-weight: 600; font-size: 14px;">üî• –ü–∞–∫–µ—Ç "–í–æ–≥–æ–Ω—å"</div>
                                    <div style="font-size: 12px; color: #666;">5 —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –µ–º–æ—Ü—ñ–π –¥–ª—è —á–∞—Ç—É</div>
                                </div>
                                <button onclick="buyItem('fire_emotes', 80)" style="background: #9c27b0; color: white; border: none; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">80 üí∞</button>
                            </div>
                            <div style="background: #f8f9fa; padding: 12px; border-radius: 10px; display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <div style="font-weight: 600; font-size: 14px;">‚öΩ –§—É—Ç–±–æ–ª—å–Ω—ñ –µ–º–æ—Ü—ñ—ó</div>
                                    <div style="font-size: 12px; color: #666;">–ì–æ–ª, –æ—Ñ—Å–∞–π–¥, —á–µ—Ä–≤–æ–Ω–∞ –∫–∞—Ä—Ç–∫–∞ —Ç–∞ —ñ–Ω—à—ñ</div>
                                </div>
                                <button onclick="buyItem('football_emotes', 60)" style="background: #9c27b0; color: white; border: none; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">60 üí∞</button>
                            </div>
                            <div style="background: #f8f9fa; padding: 12px; border-radius: 10px; display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <div style="font-weight: 600; font-size: 14px;">üéâ –°–≤—è—Ç–∫–æ–≤—ñ</div>
                                    <div style="font-size: 12px; color: #666;">–ï–º–æ—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–º–æ–≥ —Ç–∞ —Å–≤—è—Ç</div>
                                </div>
                                <button onclick="buyItem('celebration_emotes', 40)" style="background: #9c27b0; color: white; border: none; padding: 6px 12px; border-radius: 6px; font-size: 12px; cursor: pointer;">40 üí∞</button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            // Create and show store modal
            let storeModal = document.getElementById('storeModal');
            if (!storeModal) {
                storeModal = document.createElement('div');
                storeModal.id = 'storeModal';
                storeModal.className = 'rating-modal';
                storeModal.innerHTML = `
                    <div class="rating-content" style="max-width: 450px;">
                        <div class="rating-title">üõí –ú–∞–≥–∞–∑–∏–Ω</div>
                        <div id="storeContent">${storeContent}</div>
                        <div class="rating-buttons">
                            <button onclick="closeStore()" class="rating-btn skip">–ó–∞–∫—Ä–∏—Ç–∏</button>
                        </div>
                    </div>
                `;
                document.body.appendChild(storeModal);
            } else {
                document.getElementById('storeContent').innerHTML = storeContent;
            }
            
            storeModal.classList.add('show');
        }

        function closeStore() {
            document.getElementById('storeModal').style.display = 'none';
        }

        function buyItem(itemId, price) {
            if (coins >= price) {
                coins -= price;
                document.getElementById('coinCount').textContent = coins;
                
                const items = {
                    'double_xp': '‚ö° –ü–æ–¥–≤—ñ–π–Ω–∏–π –¥–æ—Å–≤—ñ–¥ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –Ω–∞ 24 –≥–æ–¥–∏–Ω–∏!',
                    'accuracy_boost': 'üéØ –ë—É—Å—Ç–µ—Ä —Ç–æ—á–Ω–æ—Å—Ç—ñ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –Ω–∞ 7 –¥–Ω—ñ–≤!',
                    'stamina_boost': 'üí™ –ë—É—Å—Ç–µ—Ä –≤–∏—Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –Ω–∞ 3 –¥–Ω—ñ!',
                    'vip_badge': 'üëë VIP –∑–Ω–∞—á–æ–∫ –¥–æ–¥–∞–Ω–æ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é!',
                    'goal_king': '‚öΩ –ë–µ–π–¥–∂ "–ö–æ—Ä–æ–ª—å –ì–æ–ª—ñ–≤" –æ—Ç—Ä–∏–º–∞–Ω–æ!',
                    'wall_badge': 'üõ°Ô∏è –ë–µ–π–¥–∂ "–°—Ç—ñ–Ω–∞" –æ—Ç—Ä–∏–º–∞–Ω–æ!',
                    'fire_emotes': 'üî• –ü–∞–∫–µ—Ç –µ–º–æ—Ü—ñ–π "–í–æ–≥–æ–Ω—å" —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ!',
                    'football_emotes': '‚öΩ –§—É—Ç–±–æ–ª—å–Ω—ñ –µ–º–æ—Ü—ñ—ó –¥–æ–¥–∞–Ω–æ!',
                    'celebration_emotes': 'üéâ –°–≤—è—Ç–∫–æ–≤—ñ –µ–º–æ—Ü—ñ—ó —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ!'
                };
                
                showToast(items[itemId] || '–ü—Ä–µ–¥–º–µ—Ç –∫—É–ø–ª–µ–Ω–æ!', 'success');
            } else {
                showToast('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–æ–Ω–µ—Ç!', 'error');
            }
        }

        function showSubscriptions() {
            document.getElementById('subscriptionsModal').style.display = 'flex';
        }

        function closeSubscriptions() {
            document.getElementById('subscriptionsModal').style.display = 'none';
        }

        function buySubscription(type) {
            if (type === 'europa') {
                showToast('‚≠ê –õ—ñ–≥–∞ –Ñ–≤—Ä–æ–ø–∏ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞! –†–µ–π—Ç–∏–Ω–≥ —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ', 'success');
            } else if (type === 'champions') {
                showToast('üèÜ –õ—ñ–≥–∞ –ß–µ–º–ø—ñ–æ–Ω—ñ–≤ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞! –ü–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø', 'success');
                addCoins(100);
            }
        }

        function buyCoins(amount, price) {
            showToast(`üí∞ –ü—Ä–∏–¥–±–∞–Ω–æ ${amount} –º–æ–Ω–µ—Ç –∑–∞ ${price}‚Ç¥!`, 'success');
            addCoins(amount);
        }

        function showExpertReviews() {
            const reviewContent = `
                <div style="text-align: center; padding: 30px 20px;">
                    <div style="font-size: 60px; margin-bottom: 20px;">üéØ</div>
                    <h3 style="color: #2e7d32; margin-bottom: 15px;">–ï–∫—Å–ø–µ—Ä—Ç–Ω—ñ –≤—ñ–¥–≥—É–∫–∏</h3>
                    <p style="color: #666; font-size: 14px; line-height: 1.5; margin-bottom: 20px;">
                        –û—Ç—Ä–∏–º–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —Å–≤–æ—î—ó –≥—Ä–∏ –≤—ñ–¥ –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏—Ö —Ç—Ä–µ–Ω–µ—Ä—ñ–≤, —Å–∫–∞—É—Ç—ñ–≤ —Ç–∞ —Ñ—É—Ç–±–æ–ª—å–Ω–∏—Ö –∑—ñ—Ä–æ–∫.
                    </p>
                    <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 20px;">
                        <h4 style="color: #4caf50; margin-bottom: 10px;">–©–æ –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–æ:</h4>
                        <div style="text-align: left; font-size: 13px; color: #666;">
                            ‚Ä¢ –ê–Ω–∞–ª—ñ–∑ —Ç–µ—Ö–Ω—ñ–∫–∏ –≤—ñ–¥ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏—Ö —Ç—Ä–µ–Ω–µ—Ä—ñ–≤<br>
                            ‚Ä¢ –í—ñ–¥–≥—É–∫–∏ –≤—ñ–¥ —Å–∫–∞—É—Ç—ñ–≤ –ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö –∫–ª—É–±—ñ–≤<br>
                            ‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –ø–æ—Ä–∞–¥–∏ –≤—ñ–¥ —Ñ—É—Ç–±–æ–ª—å–Ω–∏—Ö –∑—ñ—Ä–æ–∫<br>
                            ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∏–π —Ä–æ–∑–±—ñ—Ä –≤–∞—à–∏—Ö –≤—ñ–¥–µ–æ<br>
                            ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –≥—Ä–∏
                        </div>
                    </div>
                    <div style="background: linear-gradient(135deg, #4caf50, #66bb6a); color: white; padding: 12px; border-radius: 8px; font-weight: 600;">
                        üöÄ –°–∫–æ—Ä–æ –∑–∞–ø—É—Å–∫!
                    </div>
                </div>
            `;
            
            let reviewModal = document.getElementById('expertReviewModal');
            if (!reviewModal) {
                reviewModal = document.createElement('div');
                reviewModal.id = 'expertReviewModal';
                reviewModal.className = 'rating-modal';
                reviewModal.innerHTML = `
                    <div class="rating-content" style="max-width: 400px;">
                        <div id="expertReviewContent">${reviewContent}</div>
                        <div class="rating-buttons">
                            <button onclick="closeExpertReview()" class="rating-btn skip">–ó–∞–∫—Ä–∏—Ç–∏</button>
                        </div>
                    </div>
                `;
                document.body.appendChild(reviewModal);
            }
            
            reviewModal.classList.add('show');
        }

        function closeExpertReview() {
            document.getElementById('expertReviewModal').classList.remove('show');
        }

        function showSportsGoods() {
            const goodsContent = `
                <div style="text-align: center; padding: 30px 20px;">
                    <div style="font-size: 60px; margin-bottom: 20px;">üõçÔ∏è</div>
                    <h3 style="color: #2e7d32; margin-bottom: 15px;">–°–ø–æ—Ä—Ç–∏–≤–Ω—ñ —Ç–æ–≤–∞—Ä–∏</h3>
                    <p style="color: #666; font-size: 14px; line-height: 1.5; margin-bottom: 20px;">
                        –ö—É–ø—É–π—Ç–µ —è–∫—ñ—Å–Ω–µ —Ñ—É—Ç–±–æ–ª—å–Ω–µ —Å–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è –≤—ñ–¥ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤ –∑—ñ –∑–Ω–∏–∂–∫–∞–º–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ FLAP.
                    </p>
                    <div style="background: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 20px;">
                        <h4 style="color: #ff9800; margin-bottom: 10px;">–©–æ –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–æ:</h4>
                        <div style="text-align: left; font-size: 13px; color: #666;">
                            ‚Ä¢ –§—É—Ç–±–æ–ª—å–Ω—ñ –±—É—Ç—Å–∏ –≤—ñ–¥ —Ç–æ–ø–æ–≤–∏—Ö –±—Ä–µ–Ω–¥—ñ–≤<br>
                            ‚Ä¢ –§–æ—Ä–º–∏ —Ç–∞ –µ–∫—ñ–ø—ñ—Ä–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥<br>
                            ‚Ä¢ –ú'—è—á—ñ —Ç–∞ —Ç—Ä–µ–Ω—É–≤–∞–ª—å–Ω–µ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è<br>
                            ‚Ä¢ –ê–∫—Å–µ—Å—É–∞—Ä–∏ —Ç–∞ –∑–∞—Ö–∏—Å—Ç<br>
                            ‚Ä¢ –ï–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ –∑–Ω–∏–∂–∫–∏ –¥–æ 30%
                        </div>
                    </div>
                    <div style="background: linear-gradient(135deg, #ff9800, #ffb74d); color: white; padding: 12px; border-radius: 8px; font-weight: 600;">
                        üöÄ –°–∫–æ—Ä–æ –∑–∞–ø—É—Å–∫!
                    </div>
                </div>
            `;
            
            let goodsModal = document.getElementById('sportsGoodsModal');
            if (!goodsModal) {
                goodsModal = document.createElement('div');
                goodsModal.id = 'sportsGoodsModal';
                goodsModal.className = 'rating-modal';
                goodsModal.innerHTML = `
                    <div class="rating-content" style="max-width: 400px;">
                        <div id="sportsGoodsContent">${goodsContent}</div>
                        <div class="rating-buttons">
                            <button onclick="closeSportsGoods()" class="rating-btn skip">–ó–∞–∫—Ä–∏—Ç–∏</button>
                        </div>
                    </div>
                `;
                document.body.appendChild(goodsModal);
            }
            
            goodsModal.classList.add('show');
        }

        function closeSportsGoods() {
            document.getElementById('sportsGoodsModal').classList.remove('show');
        }

        // Modern auth system
        function switchAuthMode(mode) {
            const loginTab = document.getElementById('loginTab');
            const registerTab = document.getElementById('registerTab');
            const loginForm = document.getElementById('loginForm');
            const registerForm = document.getElementById('registerForm');

            if (mode === 'login') {
                loginTab.style.background = 'linear-gradient(135deg, #4caf50, #66bb6a)';
                loginTab.style.color = 'white';
                registerTab.style.background = 'transparent';
                registerTab.style.color = 'rgba(255,255,255,0.7)';
                loginForm.style.display = 'block';
                registerForm.style.display = 'none';
            } else {
                registerTab.style.background = 'linear-gradient(135deg, #4caf50, #66bb6a)';
                registerTab.style.color = 'white';
                loginTab.style.background = 'transparent';
                loginTab.style.color = 'rgba(255,255,255,0.7)';
                registerForm.style.display = 'block';
                loginForm.style.display = 'none';
            }
        }

        // Profile creation functions
        function previewProfilePhoto(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('profilePhotoPreview').innerHTML = `<img src="${e.target.result}" style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;">`;
                };
                reader.readAsDataURL(file);
            }
        }

        function completeProfileCreation(event) {
            event.preventDefault();
            
            const name = document.getElementById('profileName').value || "–ù–æ–≤–∏–π –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á";
            const position = document.getElementById('profilePosition').value || "–ü—ñ–≤–∑–∞—Ö–∏—Å–Ω–∏–∫";
            const city = document.getElementById('profileCity').value || "–ö–∏—ó–≤";
            const phone = document.getElementById('profilePhone').value || "+380501234567";
            const instagram = document.getElementById('profileInstagram').value || "@new_user";
            
            currentUser = {
                name: name,
                position: position,
                city: city,
                rating: 4.0,
                phone: phone,
                instagram: instagram
            };
            
            // Close profile creation modal
            document.getElementById('profileCreationModal').classList.remove('show');
            
            // Hide auth screen and show main screen
            document.getElementById('authScreen').classList.remove('active');
            document.getElementById('mainScreen').classList.add('active');
            
            showToast('üéâ –ü—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ! –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ FLAP!', 'success');
        }

        function hideAllScreens() {
            document.querySelectorAll('.screen').forEach(screen => {
                screen.classList.remove('active');
            });
        }

        function handleQuickLogin() {
            console.log('üîë handleQuickLogin –≤–∏–∫–ª–∏–∫–∞–Ω–∞');
            
            try {
                currentUser = { name: '–ú–∞–∫—Å–∏–º –ö–æ–≤–∞–ª—å', avatar: '–ú–ö', rating: 4.8 };
                
                const authScreen = document.getElementById('authScreen');
                const mainScreen = document.getElementById('mainScreen');
                
                console.log('üì± authScreen –∑–Ω–∞–π–¥–µ–Ω–æ:', !!authScreen);
                console.log('üì± mainScreen –∑–Ω–∞–π–¥–µ–Ω–æ:', !!mainScreen);
                
                if (authScreen) {
                    authScreen.style.display = 'none';
                    console.log('‚úÖ authScreen –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ');
                } else {
                    console.error('‚ùå authScreen –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
                    alert('‚ùå –ü–æ–º–∏–ª–∫–∞: authScreen –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
                    return;
                }
                
                if (mainScreen) {
                    mainScreen.style.display = 'block';
                    console.log('‚úÖ mainScreen –ø–æ–∫–∞–∑–∞–Ω–æ');
                } else {
                    console.error('‚ùå mainScreen –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
                    alert('‚ùå –ü–æ–º–∏–ª–∫–∞: mainScreen –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
                    return;
                }
                
                // Show success message
                alert('üéâ –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ –≤ —Å–∏—Å—Ç–µ–º—É!');
                
                // Show welcome subscription offer
                setTimeout(() => {
                    if (typeof showToast === 'function') {
                        showToast('üéâ –î–∞—Ä—É—î–º–æ –≤–∞–º —Ç–∏–∂–¥–µ–Ω—å –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–æ—é –õ—ñ–≥–∞ –ß–µ–º–ø—ñ–æ–Ω—ñ–≤!', 'success');
                    }
                }, 1000);
                
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ handleQuickLogin:', error);
                alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É: ' + error.message);
            }
        }

        function handleQuickRegister() {
            console.log('üìù handleQuickRegister –≤–∏–∫–ª–∏–∫–∞–Ω–∞');
            
            try {
                const profileModal = document.getElementById('profileCreationModal');
                
                if (profileModal) {
                    profileModal.classList.add('show');
                    console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –ø—Ä–æ—Ñ—ñ–ª—é –ø–æ–∫–∞–∑–∞–Ω–æ');
                } else {
                    console.log('‚ö†Ô∏è –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –ø—Ä–æ—Ñ—ñ–ª—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤—Ö–æ–¥–∏–º–æ –æ–¥—Ä–∞–∑—É');
                    handleQuickLogin(); // –Ø–∫—â–æ –Ω–µ–º–∞—î –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞, –æ–¥—Ä–∞–∑—É –≤—Ö–æ–¥–∏–º–æ
                }
                
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ handleQuickRegister:', error);
                alert('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: ' + error.message);
                // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞, —Å–ø—Ä–æ–±—É—î–º–æ —É–≤—ñ–π—Ç–∏
                handleQuickLogin();
            }
        }

        function loginWithGoogle() {
            currentUser = { name: '–ú–∞–∫—Å–∏–º –ö–æ–≤–∞–ª—å', avatar: '–ú–ö', rating: 4.8 };
            const authScreen = document.getElementById('authScreen');
            const mainScreen = document.getElementById('mainScreen');
            
            if (authScreen) authScreen.style.display = 'none';
            if (mainScreen) mainScreen.style.display = 'block';
            
            setTimeout(() => {
                showToast('üéâ –î–∞—Ä—É—î–º–æ –≤–∞–º —Ç–∏–∂–¥–µ–Ω—å –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–æ—é –õ—ñ–≥–∞ –ß–µ–º–ø—ñ–æ–Ω—ñ–≤!', 'success');
            }, 1000);
        }

        function loginWithFacebook() {
            currentUser = { name: '–ú–∞–∫—Å–∏–º –ö–æ–≤–∞–ª—å', avatar: '–ú–ö', rating: 4.8 };
            const authScreen = document.getElementById('authScreen');
            const mainScreen = document.getElementById('mainScreen');
            
            if (authScreen) authScreen.style.display = 'none';
            if (mainScreen) mainScreen.style.display = 'block';
            
            setTimeout(() => {
                showToast('üéâ –î–∞—Ä—É—î–º–æ –≤–∞–º —Ç–∏–∂–¥–µ–Ω—å –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–æ—é –õ—ñ–≥–∞ –ß–µ–º–ø—ñ–æ–Ω—ñ–≤!', 'success');
            }, 1000);
        }

        // Enhanced showSection function
        function showSection(sectionId) {
            console.log('üîÑ showSection called with:', sectionId);
            
            // Hide all sections
            const sections = document.querySelectorAll('.content-section');
            console.log('üìã Found sections:', sections.length);
            sections.forEach(section => {
                section.style.display = 'none';
                section.classList.remove('active');
            });
            
            // Remove active class from all nav tabs
            const navTabs = document.querySelectorAll('.nav-tab');
            navTabs.forEach(tab => tab.classList.remove('active'));
            
            // Show selected section
            const targetSection = document.getElementById(sectionId);
            console.log('üéØ Target section found:', !!targetSection);
            if (targetSection) {
                targetSection.style.display = 'block';
                targetSection.classList.add('active');
                console.log('‚úÖ Section displayed:', sectionId);
            } else {
                console.error('‚ùå Section not found:', sectionId);
            }
            
            // Add active class to clicked nav tab
            setTimeout(() => {
                const clickedTab = document.querySelector(`.nav-tab[onclick*="${sectionId}"]`);
                if (clickedTab) {
                    clickedTab.classList.add('active');
                    console.log('‚úÖ Tab activated:', sectionId);
                }
            }, 10);
        }

        // Enhanced player profiles with unique data
        const playersDatabase = {
            'player1': { name: '–ê–Ω–¥—Ä—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ', avatar: 'üéØ', city: '–ö–∏—ó–≤', position: '–ü—ñ–≤–∑–∞—Ö–∏—Å–Ω–∏–∫', age: 24, rating: 4.1, phone: '+380671234567', telegram: '@andriy_koval', instagram: '@andriy_football' },
            'player2': { name: '–ü–µ—Ç—Ä–æ –ú–µ–ª—å–Ω–∏–∫', avatar: '‚öΩ', city: '–õ—å–≤—ñ–≤', position: '–ù–∞–ø–∞–¥–Ω–∏–∫', age: 26, rating: 4.2, phone: '+380502345678', telegram: '@petro_mel', instagram: '@petro_striker' },
            'player3': { name: '–î–º–∏—Ç—Ä–æ –ö–æ–≤–∞–ª–µ–Ω–∫–æ', avatar: '‚ö°', city: '–û–¥–µ—Å–∞', position: '–í–æ—Ä–æ—Ç–∞—Ä', age: 23, rating: 3.8, phone: '+380633456789', telegram: '@dmytro_gk', instagram: '@dmytro_keeper' },
            'player4': { name: '–û–ª–µ–∫—Å—ñ–π –®–µ–≤—á–µ–Ω–∫–æ', avatar: 'üèÉ', city: '–•–∞—Ä–∫—ñ–≤', position: '–í–æ—Ä–æ—Ç–∞—Ä', age: 25, rating: 4.5, phone: '+380954567890', telegram: '@alex_shev', instagram: '@alex_goalkeeper' },
            'player5': { name: '–ú–∞–∫—Å–∏–º –ó—ñ–Ω—á–µ–Ω–∫–æ', avatar: 'üõ°Ô∏è', city: '–î–Ω—ñ–ø—Ä–æ', position: '–ü—ñ–≤–∑–∞—Ö–∏—Å–Ω–∏–∫', age: 27, rating: 3.7, phone: '+380675678901', telegram: '@max_zin', instagram: '@max_midfielder' },
            'player6': { name: '–í—ñ–∫—Ç–æ—Ä –®–µ–≤—á–µ–Ω–∫–æ', avatar: 'ü•Ö', city: '–ö–∏—ó–≤', position: '–ó–∞—Ö–∏—Å–Ω–∏–∫', age: 28, rating: 4.0, phone: '+380506789012', telegram: '@viktor_def', instagram: '@viktor_defense' },
            'player7': { name: '–û–ª–µ–∫—Å–∞–Ω–¥—Ä –ú–µ–ª—å–Ω–∏–∫', avatar: 'üî•', city: '–õ—å–≤—ñ–≤', position: '–ù–∞–ø–∞–¥–Ω–∏–∫', age: 22, rating: 4.3, phone: '+380637890123', telegram: '@alex_mel', instagram: '@alex_forward' }
        };



        // Create Video Functions
        function showCreateVideo() {
            document.getElementById('createVideoModal').style.display = 'flex';
        }

        function closeCreateVideo() {
            document.getElementById('createVideoModal').style.display = 'none';
        }

        function submitVideo(event) {
            event.preventDefault();
            addCoins(5); // +5 coins for creating video
            showToast('üéâ –í—ñ–¥–µ–æ —É—Å–ø—ñ—à–Ω–æ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ! +5 –º–æ–Ω–µ—Ç', 'success');
            closeCreateVideo();
        }

        // Apply Video Filters Function
        function applyVideoFilters() {
            const city = document.getElementById('cityFilter').value;
            const category = document.getElementById('categoryFilter').value;
            const rating = document.getElementById('ratingFilter').value;
            
            let message = '–§—ñ–ª—å—Ç—Ä–∏ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ: ';
            if (city) message += `–ú—ñ—Å—Ç–æ: ${city} `;
            if (category) message += `–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: ${category} `;
            if (rating) message += `–†–µ–π—Ç–∏–Ω–≥: ${rating}+ `;
            
            showToast(message || '–ü–æ–∫–∞–∑–∞–Ω–æ –≤—Å—ñ –≤—ñ–¥–µ–æ', 'info');
        }

        // Modal close function
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        // Copy to clipboard function
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                showToast('üìã –°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!', 'success');
            });
        }

